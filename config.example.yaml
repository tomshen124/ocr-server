# OCR服务配置示例
# 复制此文件为 config.yaml 并根据需要修改配置

# 基本服务配置
host: "http://127.0.0.1"
port: 31101
service_name: "ocr-server"        # 服务名称标识
preview_url: "http://127.0.0.1:31101"
session_timeout: 86400

# 开发调试配置
debug:
  # ⚠️ 警告：以下选项仅用于开发环境，生产环境必须设置为 false
  enable_mock_login: false   # 是否启用模拟登录接口（⚠️ 生产环境必须为 false）
  mock_login_warning: true   # 是否显示模拟登录警告信息

# 单点登录配置
login:
  access_token_url: 'https://ibcdsg.zj.gov.cn:8443/restapi/prod/IC33000020220329000007/uc/sso/access_token'
  get_user_info_url: 'https://ibcdsg.zj.gov.cn:8443/restapi/prod/IC33000020220329000008/uc/sso/getUserInfo'
  access_key: 'BCDSGA_f56e1708ce9038a17f2be55c14f01fce'
  secret_key: 'BCDSGS_1254c9d66293612217306ce6d728aad4'

# 应用配置
app_id: '2002387292'              # 第三方系统注册的应用ID
callback_url: ''                  # 第三方回调地址（用于通知预审结果）

# 对象存储配置
zhzwdt-oss:
  root: "ocr-files"
  bucket: "your-bucket"
  server_url: "https://your-oss-endpoint.com"
  AccessKey: "your-access-key"
  AccessKey Secret: "your-access-key-secret"

# 数据库配置
DMSql:
  DATABASE_HOST: "localhost"
  DATABASE_PORT: "5236"
  DATABASE_USER: "SYSDBA"
  DATABASE_PASSWORD: "SYSDBA"
  DATABASE_NAME: "OCR_DB"

# 审批系统配置
approve:
  submit-url: 'https://ibcdsg.zj.gov.cn:8443/restapi/prod/IC33000020220310000001/zjzwfw-open-middleware/zjzwfw/approve/add'
  access-key: 'BCDSGA_f56e1708ce9038a17f2be55c14f01fce'
  secret-key: 'BCDSGS_1254c9d66293612217306ce6d728aad4'

# 监控配置
monitoring:
  # 是否启用监控功能
  enabled: true
  
  # 监控检查间隔（秒）
  check_interval: 60
  
  # 系统资源监控配置
  system:
    # CPU使用率告警阈值（%）
    cpu_threshold: 90.0
    # 内存使用率告警阈值（%）
    memory_threshold: 90.0
    # 磁盘使用率告警阈值（%）
    disk_threshold: 90.0
    # 资源检查间隔（秒）
    resource_check_interval: 60
  
  # OCR服务监控配置
  ocr_service:
    # 服务名称
    name: "ocr-server"
    # 服务端口（通常与主服务端口相同）
    port: 31101
    # 健康检查间隔（秒）
    health_check_interval: 300
    # API超时时间（秒）
    api_timeout: 5
    # 内存使用阈值（MB）
    memory_threshold_mb: 500
    # 是否启用自动重启
    auto_restart: false
    # 每天最大重启次数
    max_restarts_per_day: 10
  
  # 告警配置
  alerts:
    # 是否启用告警
    enabled: true
    # 告警冷却时间（秒）
    cooldown_seconds: 300
    # 每小时最大告警次数
    max_alerts_per_hour: 10
    # 是否记录到日志
    log_to_file: true
  
  # 数据保留配置
  retention:
    # 系统指标保留时间（小时）
    system_metrics_hours: 24
    # OCR指标保留时间（小时）
    ocr_metrics_hours: 24
    # 告警记录保留时间（小时）
    alerts_hours: 72
    # 最大记录数量
    max_records: 1440
  
  # 监控认证配置
  auth:
    # 是否启用认证
    enabled: true
    # 会话超时时间（分钟）
    session_timeout_minutes: 120
    # 令牌密钥（生产环境请修改）
    token_secret: "please-change-this-to-a-random-string-in-production"

# 监控功能使用说明：
# 
# 1. 启用监控功能：
#    - 设置 monitoring.enabled: true
#    - 使用 --features monitoring 编译和运行服务
#
# 2. 访问监控界面：
#    - 监控仪表盘：http://localhost:31101/static/monitor.html
#    - 监控API：http://localhost:31101/api/monitoring/*
#
# 3. 配置说明：
#    - check_interval: 主监控循环间隔
#    - system.resource_check_interval: 系统资源检查间隔
#    - ocr_service.health_check_interval: OCR服务健康检查间隔
#    - alerts.cooldown_seconds: 防止告警轰炸的冷却时间
#    - retention.*: 数据保留策略，避免内存占用过多
#
# 4. 性能影响：
#    - 监控功能设计为低开销，正常情况下CPU占用 < 1%
#    - 内存占用约10-50MB（取决于保留的历史数据量）
#    - 可通过调整检查间隔来平衡监控精度和性能
#
# 5. 生产环境建议：
#    - 修改 monitoring.auth.token_secret 为随机字符串
#    - 根据实际需求调整告警阈值
#    - 考虑启用 ocr_service.auto_restart（谨慎使用）
#    - 定期检查日志文件大小，避免磁盘空间不足

# ============= 日志配置示例 =============
logging:
  # 全局日志级别: trace, debug, info, warn, error
  level: info
  
  # 控制台输出配置
  console:
    enabled: true          # 是否启用控制台输出
    color: true           # 是否使用颜色
    target: false         # 是否显示模块名（开发时设为true）
    location: false       # 是否显示文件名和行号（调试时设为true）
  
  # 文件输出配置
  file:
    enabled: true                    # 是否启用文件输出
    directory: "logs"               # 日志文件目录
    filename_prefix: "ocr"          # 文件名前缀
    rotation: "daily"               # 轮转策略: daily(按天), hourly(按小时), never(不轮转)
    max_size_mb: 100               # 最大文件大小(MB)，仅当rotation=size时有效
    retention_days: 7              # 保留天数，自动清理旧日志
    compress: false                # 是否压缩旧文件（暂未实现）
  
  # 结构化日志（JSON格式）
  structured: false               # 是否使用JSON格式输出（监控系统需要时设为true）
  
  # 模块级别配置（高级用法）
  modules:
    # "ocr_server::api": "debug"        # API模块使用debug级别，查看详细请求信息
    # "ocr_server::model": "info"       # model模块使用info级别
    # "tower_http": "warn"              # HTTP库只记录warning以上，减少噪音
    # "sqlx": "error"                   # 数据库日志只记录错误
    # "tokio": "warn"                   # tokio运行时只记录警告

# 开发环境日志配置示例（调试时使用）
# logging:
#   level: debug
#   console:
#     enabled: true
#     color: true
#     target: true       # 显示模块名，便于调试
#     location: true     # 显示文件位置，便于定位问题
#   file:
#     enabled: true
#     directory: "logs"
#     filename_prefix: "ocr-dev"
#     rotation: "hourly"  # 开发时按小时轮转，便于分析
#     retention_days: 3   # 开发环境只保留3天
#   structured: false
#   modules:
#     "ocr_server": "debug"
#     "tower_http": "info"

# 生产环境日志配置示例（线上使用）
# logging:
#   level: info
#   console:
#     enabled: false     # 生产环境关闭控制台输出
#     color: false
#     target: false
#     location: false
#   file:
#     enabled: true
#     directory: "/var/log/ocr-server"  # 使用标准日志目录
#     filename_prefix: "ocr"
#     rotation: "daily"
#     retention_days: 30  # 生产环境保留30天
#   structured: true      # 生产环境使用JSON格式，便于日志收集
#   modules:
#     "ocr_server": "info"
#     "tower_http": "warn"
# ==========================================

# 独立监控服务配置
external_monitor:
  enabled: false    # 通常使用集成监控即可
  port: 8964
  config_file: "ocr-monitor/config.yaml"
